---
import AccountIcon from "./AccountIcon.astro";
import Logo from "./Logo.astro";
import RegionIcon from "./RegionIcon.astro";
import SupportIcon from "./SupportIcon.astro";
---

<header id="landing-header" class="py-[10px] px-12 flex items-center fixed top-0 w-full justify-between z-40 text-white">
  <div class="flex flex-grow basis-0">
    <Logo />
  </div>

  <nav>
    <ul class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2">
      <li><a href="#">Vehicles</a></li>
      <li><a href="#">Energy</a></li>
      <li><a href="#">Charging</a></li>
      <li><a href="#">Discover</a></li>
      <li><a href="#">Shop</a></li>
    </ul>
  </nav>

  <nav class="flex flex-grow basis-0 justify-end">
    <ul class="flex text-sm  [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:inline-block [&>li>a]:px-1 [&>li>a]:py-2">
      <li><a href="#"><SupportIcon/></a></li>
      <li><a href="#"><RegionIcon/></a></li>
      <li><a href="#"><AccountIcon/></a></li>
    </ul>
  </nav>

  <div
    id="menu-backdrop"
    class="absolute bg-black/5 backdrop-blur-md rounded left-[var(--left)] top-[var(--top)] w-[var(--width)] h-[var(--height)] transition-all duration-500 ease-in-out opacity-0 -z-10" /> 
</header>

<script>
  const listItem = document.querySelectorAll('#landing-header li');
  const menuBackDrop = document.querySelector('#menu-backdrop') as HTMLElement;

  listItem.forEach((item) => {
    item.addEventListener('mouseenter', () => {
      const { left, top, width, height } = item.getBoundingClientRect();
      menuBackDrop.style.setProperty('--left', `${left}px`);
      menuBackDrop.style.setProperty('--top', `${top}px`);
      menuBackDrop.style.setProperty('--width', `${width}px`);
      menuBackDrop.style.setProperty('--height', `${height}px`);

      menuBackDrop.style.opacity = '1';
      menuBackDrop.style.visibility = 'visible';
    })

    item.addEventListener('mouseleave', () => {
      menuBackDrop.style.opacity = '0';
      menuBackDrop.style.visibility = 'hidden';
    })
  })
</script>

<script>
  const header = document.querySelector('#landing-header') as HTMLElement;
  // Intersection Observer
  const observerOptions = {
    root: null, // use the document's viewport as the container
    rootMargin: '0px', // % or px - offsets added to each side of the intersection
    threshold: 0.90 // percentage of the target element which is visible
  }

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute('data-header-color');
        header.style.color = color;
      }
    })
  }, observerOptions);

  const sections = document.querySelectorAll('.landing-section');
  sections.forEach((section) => observer.observe(section));
</script>